// DUIRes.h : CDUIRes 的声明

#pragma once
#include "resource.h"       // 主符号

#include "DirectUICom.h"


#if defined(_WIN32_WCE) && !defined(_CE_DCOM) && !defined(_CE_ALLOW_SINGLE_THREADED_OBJECTS_IN_MTA)
#error "Windows CE 平台(如不提供完全 DCOM 支持的 Windows Mobile 平台)上无法正确支持单线程 COM 对象。定义 _CE_ALLOW_SINGLE_THREADED_OBJECTS_IN_MTA 可强制 ATL 支持创建单线程 COM 对象实现并允许使用其单线程 COM 对象实现。rgs 文件中的线程模型已被设置为“Free”，原因是该模型是非 DCOM Windows CE 平台支持的唯一线程模型。"
#endif



// CDUIRes

class ATL_NO_VTABLE CDUIRes :
	public CComObjectRootEx<CComMultiThreadModel>,
	public CComCoClass<CDUIRes, &CLSID_DUIRes>,
	public ISupportErrorInfo,
	public IDispatchImpl<IDUIRes, &IID_IDUIRes, &LIBID_DirectUIComLib, /*wMajor =*/ 1, /*wMinor =*/ 0>
{
public:
	CDUIRes();
	virtual ~CDUIRes();

DECLARE_REGISTRY_RESOURCEID(IDR_DUIRES)


BEGIN_COM_MAP(CDUIRes)
	COM_INTERFACE_ENTRY(IDUIRes)
	COM_INTERFACE_ENTRY(IDispatch)
	COM_INTERFACE_ENTRY(ISupportErrorInfo)
END_COM_MAP()

// ISupportsErrorInfo
	STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid);


	DECLARE_PROTECT_FINAL_CONSTRUCT()

	HRESULT FinalConstruct();
	void FinalRelease();

private:
	CDUIResource_ m_duiResource;

public:
	STDMETHOD(GetDUIResObjPtr)(OLE_HANDLE *plResObjPtr);
	STDMETHOD(OpenSkin)(VARIANT_BOOL *pbResult);
	STDMETHOD(CloseSkin)(VARIANT_BOOL *pbResult);
	STDMETHOD(CreateDirectUI)(OLE_HANDLE hWnd,IDirectUI **pResult);
	STDMETHOD(CreateControl)(IDirectUI* pDirectUI,BSTR strCLSID,IDUIControlBase **pResult);
	STDMETHOD(LoadImage)(BSTR strImagePath,IDUIRenderImage **ppResult);
};

OBJECT_ENTRY_AUTO(__uuidof(DUIRes), CDUIRes)
